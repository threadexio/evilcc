#!/usr/bin/env bash
set -eu -o pipefail

CSI="\x1b"

BRIGHT_RED="$CSI[91m"
BRIGHT_YELLOW="$CSI[93m"
BOLD="$CSI[1m"
RESET="$CSI[0m"

verbose=0

info() {
  if [ "$verbose" -eq 1 ]; then
    printf "$BOLD[INFO evilcc] %s$RESET\n" "$1"
  fi
}

warn() {
  printf "$BOLD$BRIGHT_YELLOW[WARN evilcc] %s$RESET\n" "$1"
}

error() {
  printf "$BOLD$BRIGHT_RED[ERROR evilcc] %s$RESET\n" "$1"
}

fatal() {
  error "$@"
  exit 1
}

usage() {
  printf "Usage: %s [options] file...\n" "$(basename $0)"
  printf "\n"
  printf "Options:\n"
  printf "  %-30s %s\n" "-h|--help" "Display this information."
  printf "  %-30s %s\n" "--verbose" "Be verbose."
  printf "  %-30s %s\n" "--promote-uid" "Promote the real UID to the effective UID."
  printf "  %-30s %s\n" "--promote-gid" "Promote the real GID to the effective GID."
  printf "  %-30s %s\n" "--disable-aslr [method]" "Run using ADDR_NO_RANDOMIZE."
  printf "  %-30s %s\n" "" "  [methods: prctl, chmod]"
  printf "  %-30s %s\n" "--setuid" "Mark the resulting binary as setuid."
  printf "  %-30s %s\n" "--setgid" "Mark the resulting binary as setgid."
  printf "  %-30s %s\n" "  ..." "Any other options for the underlying compiler."
  printf "\n"
  printf "Environment variables:\n"
  printf "  %-10s %s\n" "_CC" "Path to the underlying C compiler."
  printf "  %-10s %s\n" "" "  [default: cc]"
}

SYSROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

cc=
cc_flags=()
cc_lflags=()

out=
arch=$(uname -m)
is_linking=1
promote_uid=
promote_gid=
disable_aslr=
disable_aslr_method=
is_setuid=0
is_setgid=0

while [ ! -z "${1:-}" ]; do
  case "$1" in
    -h|--help)
      usage
      exit 0
      ;;

    --verbose)
      verbose=1
      shift
      ;;

    --promote-uid)
      promote_uid=1
      shift
      ;;

    --promote-gid)
      promote_gid=1
      shift
      ;;

    --disable-aslr)
      disable_aslr=1
      
      [ -z "${2:-}" ] && fatal "--disable-alsr needs a method"
      disable_aslr_method="$2"
      shift 2
      ;;

    --setuid)
      is_setuid=1
      shift
      ;;

    --setgid)
      is_setgid=1
      shift
      ;;

    -c)
      is_linking=0
      cc_flags+=("$1")
      shift
      ;;
    -o)
      [ -z "${2:-}" ] && fatal "-o needs a path"
      out="$2"
      cc_flags+=("$1" "$2")
      shift 2
      ;;
    -m32)
      arch="i386"
      cc_flags+=("$1")
      shift
      ;;
    -m64)
      arch="x86_64"
      cc_flags+=("$1")
      shift
      ;;
    *)
      cc_flags+=("$1")
      shift
      ;;
  esac
done

if [ -z "${_CC:-}" ]; then
  warn "_CC is not set, assuming 'cc'"
  cc="cc"
else
  cc="${_CC}"
fi

if [ "$is_linking" -eq 0 ]; then
  info "evilcc does not do anything in compilation mode, try using it as a linker"
  exec "$cc" "${cc_flags[@]}"
fi

evilcc_cflags=()

if [ ! -z "$promote_uid" ]; then
  evilcc_cflags+=("-D__EVILCC_PROMOTE_UID")
fi

if [ ! -z "$promote_gid" ]; then
  evilcc_cflags+=("-D__EVILCC_PROMOTE_GID")
fi

if [ ! -z "$disable_aslr" ]; then
  evilcc_cflags+=("-D__EVILCC_DISABLE_ASLR")

  case "$disable_aslr_method" in
    "prctl")
      evilcc_cflags+=("-D__EVILCC_DROP_SUGID_METHOD=__EVILCC_DROP_SUGID_PRCTL")
      ;;
    "chmod")
      evilcc_cflags+=("-D__EVILCC_DROP_SUGID_METHOD=__EVILCC_DROP_SUGID_CHMOD")
      evilcc_cflags+=("-D__EVILCC_IS_SETUID=$is_setuid")
      evilcc_cflags+=("-D__EVILCC_IS_SETGID=$is_setgid")
      ;;
    *)
      fatal "Invalid method for --disable-aslr, see --help."
      ;;
  esac
fi

info "sysroot: $SYSROOT"

evilcc_out="$(mktemp -d)"
info "building evilcc in $evilcc_out"
make -j -C "$SYSROOT/src" O="$evilcc_out" ARCH="$arch" CFLAGS="${evilcc_cflags[*]}" build
evilcc_archive="$evilcc_out/arch/$arch/evilcc.a"

cc_lflags+=("-Wl,-e__evilcc_entry")

info "cc flags: ${cc_flags[*]}"

$cc "$evilcc_archive" "${cc_flags[@]}" "${cc_lflags[@]}"

if [ ! -z "$out" ]; then
  info "resulting binary: $out"

  if [ "$is_setuid" -eq 1 ]; then
    info "mark setuid"
    chmod -v u+s "$out"
  fi

  if [ "$is_setgid" -eq 1 ]; then
    info "mark setgid"
    chmod -v g+s "$out"
  fi
fi
